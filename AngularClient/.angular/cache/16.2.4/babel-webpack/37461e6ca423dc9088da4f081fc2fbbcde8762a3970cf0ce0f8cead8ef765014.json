{"ast":null,"code":"// import { Pipe } from \"rxjs\";\nimport { LearningWay } from \"../app/modules/Courses/course.model\";\nimport * as i0 from \"@angular/core\";\nexport class IconPipe {\n  transform(value) {\n    if (value == LearningWay.Zoom) return \"assets\\\\option-learning1.png\";\n    if (value == LearningWay.Frontal) return \"\\\\assets\\\\2.png\";\n    return \"\";\n  }\n  static #_ = this.ɵfac = function IconPipe_Factory(t) {\n    return new (t || IconPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"IconPipe\",\n    type: IconPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["LearningWay","IconPipe","transform","value","Zoom","Frontal","_","_2","pure"],"sources":["E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\iconPipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\r\n// import { Pipe } from \"rxjs\";\r\nimport { LearningWay } from \"../app/modules/Courses/course.model\";\r\n\r\n@Pipe({\r\n    name:\"IconPipe\"\r\n})\r\nexport class IconPipe implements PipeTransform{\r\n\r\n    transform(value: any) {\r\n        if(value==LearningWay.Zoom)\r\n            return \"assets\\\\option-learning1.png\"\r\n        if(value==LearningWay.Frontal)\r\n            return \"\\\\assets\\\\2.png\"\r\n        return \"\"\r\n    }\r\n}\r\n"],"mappings":"AACA;AACA,SAASA,WAAW,QAAQ,qCAAqC;;AAKjE,OAAM,MAAOC,QAAQ;EAEjBC,SAASA,CAACC,KAAU;IAChB,IAAGA,KAAK,IAAEH,WAAW,CAACI,IAAI,EACtB,OAAO,8BAA8B;IACzC,IAAGD,KAAK,IAAEH,WAAW,CAACK,OAAO,EACzB,OAAO,iBAAiB;IAC5B,OAAO,EAAE;EACb;EAAC,QAAAC,CAAA,G;qBARQL,QAAQ;EAAA;EAAA,QAAAM,EAAA,G;;UAARN,QAAQ;IAAAO,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}