{"ast":null,"code":"let studentslist =\n// [new Student(\"fghj\", 1, \"jk\", \"hjk 5\", \"13456\", \"d@s\", 89, undefined, true, [new Test(1, new Date(), \"jkk\", 90), new Test(2, new Date(), \"yy\", 90)], undefined), new Student(\"fgk\", 2, \"hjkjk\", \"gg\", \"1345678956\", \"h@else\", 67, undefined, true, undefined, undefined)];\nclass studentService {\n  constructor(http) {\n    this.http = http;\n    this.students = studentslist;\n  }\n  getStudents() {\n    return this.students;\n  }\n  // setStudents(student: Student | undefined) {\n  //    let index = this.students ? this.students.findIndex(s => student?.id == s.id) : -1;\n  //    if (index > 0) {\n  //       this.students?.splice(index);\n  //    }\n  //    student && this.students ? this.students.push(student) : 0;\n  // }\n  deleteStudent(student) {\n    let index = this.students ? this.students.findIndex(s => student?.id == s.id) : -1;\n    if (index > -1) {\n      this.students?.splice(index);\n    }\n  }\n  putStudents(student) {\n    this.getStudentsAfterSeconds().subscribe(s => this.st = s, err => console.log(\"err\"));\n    let index = this.students ? this.st?.findIndex(s => student?.id == s.id) : -1;\n    if (index ? index > -1 : -1) {\n      this.students?.splice(index ? index : -1);\n      return this.http.put(`/api/Students/${index}`, student);\n    } else {\n      return this.addStudents(student);\n    }\n  }\n  addStudents(student) {\n    return this.http.post(\"/api/Students\", student);\n  }\n  getStudentsAfterSeconds() {\n    return this.http.get(\"/api/Students\");\n  }\n};\nexport {};","map":{"version":3,"names":["studentslist","studentService","constructor","http","students","getStudents","deleteStudent","student","index","findIndex","s","id","splice","putStudents","getStudentsAfterSeconds","subscribe","st","err","console","log","put","addStudents","post","get"],"sources":["E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\studentService.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Student } from \"./student.model\";\r\nimport { Test } from \"./test.model\";\r\nimport { Observable } from \"rxjs/internal/Observable\";\r\nimport {HttpClient}from '@angular/common/http';\r\nlet studentslist =\r\n  // [new Student(\"fghj\", 1, \"jk\", \"hjk 5\", \"13456\", \"d@s\", 89, undefined, true, [new Test(1, new Date(), \"jkk\", 90), new Test(2, new Date(), \"yy\", 90)], undefined), new Student(\"fgk\", 2, \"hjkjk\", \"gg\", \"1345678956\", \"h@else\", 67, undefined, true, undefined, undefined)];\r\n\r\n@Injectable()\r\nexport class studentService {\r\n   constructor(private http:HttpClient){\r\n\r\n   }\r\n   students: Student[] | undefined = studentslist;\r\n   getStudents(): Student[] | undefined {\r\n      return this.students;\r\n   }\r\n   // setStudents(student: Student | undefined) {\r\n   //    let index = this.students ? this.students.findIndex(s => student?.id == s.id) : -1;\r\n   //    if (index > 0) {\r\n   //       this.students?.splice(index);\r\n   //    }\r\n   //    student && this.students ? this.students.push(student) : 0;\r\n   // }\r\n   deleteStudent(student: Student | undefined) {\r\n      let index = this.students ? this.students.findIndex(s => student?.id == s.id) : -1;\r\n      if (index > -1) {\r\n         this.students?.splice(index);\r\n      }\r\n   }\r\n   st:Student[]|undefined;\r\n   putStudents(student: Student | undefined): Observable<boolean>{\r\n      this.getStudentsAfterSeconds().subscribe(s=>this.st=s,err=>console.log(\"err\"));\r\n      let index = this.students?this.st?.findIndex(s => student?.id == s.id) : -1;\r\n      if (index?index > -1:-1) {\r\n         this.students?.splice(index?index:-1);\r\n         return this.http.put<boolean>(`/api/Students/${index}`,student);\r\n      }   \r\n      else{\r\n         return this.addStudents(student);\r\n      }\r\n   };\r\n   addStudents(student: Student | undefined): Observable<boolean>{\r\n     return this.http.post<boolean>(\"/api/Students\",student);\r\n   };\r\n   getStudentsAfterSeconds(): Observable<Student[]>{\r\n      return this.http.get<Student[]>(\"/api/Students\");\r\n    };\r\n \r\n   // getStudentsAfterSeconds(): Promise<Student[]> {\r\n   //    return new Promise((res, rej) => {\r\n   //       setTimeout(() => {\r\n   //          res(this.students ? this.students : []);\r\n   //       }, 3000)\r\n   //    });\r\n   // }\r\n}\r\n"],"mappings":"AAKA,IAAIA,YAAY;AACd;AAEF,MACaC,cAAc;EACxBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAGxB,KAAAC,QAAQ,GAA0BJ,YAAY;EAD9C;EAEAK,WAAWA,CAAA;IACR,OAAO,IAAI,CAACD,QAAQ;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAE,aAAaA,CAACC,OAA4B;IACvC,IAAIC,KAAK,GAAG,IAAI,CAACJ,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACK,SAAS,CAACC,CAAC,IAAIH,OAAO,EAAEI,EAAE,IAAID,CAAC,CAACC,EAAE,CAAC,GAAG,CAAC,CAAC;IAClF,IAAIH,KAAK,GAAG,CAAC,CAAC,EAAE;MACb,IAAI,CAACJ,QAAQ,EAAEQ,MAAM,CAACJ,KAAK,CAAC;;EAElC;EAEAK,WAAWA,CAACN,OAA4B;IACrC,IAAI,CAACO,uBAAuB,EAAE,CAACC,SAAS,CAACL,CAAC,IAAE,IAAI,CAACM,EAAE,GAACN,CAAC,EAACO,GAAG,IAAEC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC9E,IAAIX,KAAK,GAAG,IAAI,CAACJ,QAAQ,GAAC,IAAI,CAACY,EAAE,EAAEP,SAAS,CAACC,CAAC,IAAIH,OAAO,EAAEI,EAAE,IAAID,CAAC,CAACC,EAAE,CAAC,GAAG,CAAC,CAAC;IAC3E,IAAIH,KAAK,GAACA,KAAK,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,EAAE;MACtB,IAAI,CAACJ,QAAQ,EAAEQ,MAAM,CAACJ,KAAK,GAACA,KAAK,GAAC,CAAC,CAAC,CAAC;MACrC,OAAO,IAAI,CAACL,IAAI,CAACiB,GAAG,CAAU,iBAAiBZ,KAAK,EAAE,EAACD,OAAO,CAAC;KACjE,MACG;MACD,OAAO,IAAI,CAACc,WAAW,CAACd,OAAO,CAAC;;EAEtC;EACAc,WAAWA,CAACd,OAA4B;IACtC,OAAO,IAAI,CAACJ,IAAI,CAACmB,IAAI,CAAU,eAAe,EAACf,OAAO,CAAC;EACzD;EACAO,uBAAuBA,CAAA;IACpB,OAAO,IAAI,CAACX,IAAI,CAACoB,GAAG,CAAY,eAAe,CAAC;EAClD;CASH"},"metadata":{},"sourceType":"module","externalDependencies":[]}