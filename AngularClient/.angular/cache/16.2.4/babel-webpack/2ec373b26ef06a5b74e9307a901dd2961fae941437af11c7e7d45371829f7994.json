{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./app/studentService.service\";\nexport class SAvgService {\n  constructor(_studentService) {\n    this._studentService = _studentService;\n    this.students = [];\n    _studentService.getStudents().subscribe(s => this.students = s, err => console.log(\"err\"));\n    this.students = _studentService.getStudents();\n  }\n  getAvgById(id) {\n    const s = this.students?.find(stu => stu.id === id);\n    if (s == undefined) return -1;\n    let sum = 0;\n    s.tests?.forEach(element => {\n      sum += element.mark ? element.mark : 0;\n    });\n    return sum / (s.tests ? s.tests.length : 0);\n  }\n  static #_ = this.ɵfac = function SAvgService_Factory(t) {\n    return new (t || SAvgService)(i0.ɵɵinject(i1.studentService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SAvgService,\n    factory: SAvgService.ɵfac\n  });\n}","map":{"version":3,"names":["SAvgService","constructor","_studentService","students","getStudents","subscribe","s","err","console","log","getAvgById","id","find","stu","undefined","sum","tests","forEach","element","mark","length","_","i0","ɵɵinject","i1","studentService","_2","factory","ɵfac"],"sources":["E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\sAvgService.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { studentService } from \"./app/studentService.service\";\r\nimport { Student } from \"./app/student.model\";\r\n\r\n@Injectable()\r\nexport class SAvgService{\r\nstudents:Student[]|undefined=[];\r\nconstructor(private _studentService:studentService ){\r\n    _studentService.getStudents().subscribe(s=> this.students = s,err=>console.log(\"err\"));\r\n\r\nthis.students=_studentService.getStudents();\r\n}\r\ngetAvgById(id?:number):number{\r\n    const s=this.students?.find(stu=>stu.id===id);\r\n    if(s==undefined)\r\n    return -1;\r\nlet sum:number=0;\r\ns.tests?.forEach(element => {\r\n    sum+=element.mark?element.mark:0;\r\n});\r\n return sum/(s.tests?s.tests.length:0);\r\n}\r\n}"],"mappings":";;AAKA,OAAM,MAAOA,WAAW;EAExBC,YAAoBC,eAA8B;IAA9B,KAAAA,eAAe,GAAfA,eAAe;IADnC,KAAAC,QAAQ,GAAqB,EAAE;IAE3BD,eAAe,CAACE,WAAW,EAAE,CAACC,SAAS,CAACC,CAAC,IAAG,IAAI,CAACH,QAAQ,GAAGG,CAAC,EAACC,GAAG,IAAEC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC,CAAC;IAE1F,IAAI,CAACN,QAAQ,GAACD,eAAe,CAACE,WAAW,EAAE;EAC3C;EACAM,UAAUA,CAACC,EAAU;IACjB,MAAML,CAAC,GAAC,IAAI,CAACH,QAAQ,EAAES,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACF,EAAE,KAAGA,EAAE,CAAC;IAC7C,IAAGL,CAAC,IAAEQ,SAAS,EACf,OAAO,CAAC,CAAC;IACb,IAAIC,GAAG,GAAQ,CAAC;IAChBT,CAAC,CAACU,KAAK,EAAEC,OAAO,CAACC,OAAO,IAAG;MACvBH,GAAG,IAAEG,OAAO,CAACC,IAAI,GAACD,OAAO,CAACC,IAAI,GAAC,CAAC;IACpC,CAAC,CAAC;IACD,OAAOJ,GAAG,IAAET,CAAC,CAACU,KAAK,GAACV,CAAC,CAACU,KAAK,CAACI,MAAM,GAAC,CAAC,CAAC;EACtC;EAAC,QAAAC,CAAA,G;qBAhBYrB,WAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX1B,WAAW;IAAA2B,OAAA,EAAX3B,WAAW,CAAA4B;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}