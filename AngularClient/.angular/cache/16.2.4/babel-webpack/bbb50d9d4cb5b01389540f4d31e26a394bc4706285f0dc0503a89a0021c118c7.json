{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../users/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_input_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 10);\n  }\n}\nfunction LoginComponent_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function LoginComponent_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.lecturer());\n    });\n    i0.ɵɵtext(1, \"Login Lecturer\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(_userService, router, activatedRoute) {\n    this._userService = _userService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.users = [];\n    this.usersForm = new FormGroup({\n      name: new FormControl(''),\n      password: new FormControl(''),\n      course: new FormControl('')\n    });\n  }\n  ngOnInit() {\n    this._userService.getUsersFromServer().subscribe(data => {\n      this.users = data;\n      console.log(\"users:\", this.users);\n    });\n    this.activatedRoute.queryParams.subscribe(params => {\n      if (params) {\n        this.isLecturer = params['isLecturer'];\n      }\n    });\n  }\n  checkUser() {\n    const name = this.usersForm.value.name;\n    const password = this.usersForm.value.password;\n    // Check if the user exists in the array of all users\n    const user = this.users.find(user => user.name === name);\n    // Display alert based on whether the user exists or not\n    if (user) {\n      // If user exists, check if the password is correct\n      if (user.password === password) {\n        sessionStorage.setItem('userData', JSON.stringify(user));\n        this.router.navigate(['/allCourses']);\n      } else {\n        Swal.fire('Error', 'Wrong Password', 'error');\n      }\n    } else {\n      // If user does not exist, navigate to the register component\n      this.router.navigate(['/register'], {\n        queryParams: {\n          userName: name\n        }\n      });\n    }\n  }\n  lecturer() {\n    this.router.navigate(['/login'], {\n      queryParams: {\n        isLecturer: true\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 16,\n    vars: 3,\n    consts: [[3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"usr\"], [\"type\", \"text\", \"id\", \"usr\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"pwd\"], [\"type\", \"password\", \"id\", \"pwd\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"course\"], [\"type\", \"text\", \"class\", \"form-control\", \"id\", \"course\", \"formControlName\", \"password\", 4, \"ngIf\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [\"class\", \"btn btn-success\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"text\", \"id\", \"course\", \"formControlName\", \"password\", 1, \"form-control\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Course:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, LoginComponent_input_12_Template, 1, 0, \"input\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_13_listener() {\n          return ctx.checkUser();\n        });\n        i0.ɵɵtext(14, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, LoginComponent_button_15_Template, 2, 0, \"button\", 9);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.usersForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLecturer);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLecturer);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","Swal","i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","LoginComponent_button_15_Template_button_click_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","lecturer","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","_userService","router","activatedRoute","users","usersForm","name","password","course","ngOnInit","getUsersFromServer","subscribe","data","console","log","queryParams","params","isLecturer","checkUser","value","user","find","sessionStorage","setItem","JSON","stringify","navigate","fire","userName","_","ɵɵdirectiveInject","i1","UserService","i2","Router","ActivatedRoute","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_input_12_Template","LoginComponent_Template_button_click_13_listener","LoginComponent_button_15_Template","ɵɵproperty","ɵɵadvance"],"sources":["E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\modules\\login\\login.component.ts","E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\modules\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User } from '../users/user.model';\nimport { UserService } from '../users/user.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { Course } from '../Courses/course.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  users: User[] = [];\n  usersForm: FormGroup;\n  isLecturer?:boolean;\n  constructor(private _userService: UserService, private router: Router,private activatedRoute: ActivatedRoute) {\n    this.usersForm = new FormGroup({\n      name: new FormControl(''),\n      password: new FormControl(''),\n      course: new FormControl('')\n    });\n  }\n  ngOnInit(): void {\n    this._userService.getUsersFromServer().subscribe(data => {\n      this.users = data;\n      console.log(\"users:\", this.users);\n    });\n   this.activatedRoute.queryParams.subscribe(params => {\n      if (params) {\n        this.isLecturer=params['isLecturer'];}\n  });\n  }\n\n  checkUser() {\n    const name = this.usersForm.value.name;\n    const password = this.usersForm.value.password;\n\n    // Check if the user exists in the array of all users\n    const user = this.users.find(user => user.name === name);\n\n    // Display alert based on whether the user exists or not\n    if (user) {\n      // If user exists, check if the password is correct\n      if (user.password === password) {\n        sessionStorage.setItem('userData', JSON.stringify(user));\n        this.router.navigate(['/allCourses']);\n      } else {\n        Swal.fire('Error', 'Wrong Password', 'error');\n      }\n    } else {\n      // If user does not exist, navigate to the register component\n      this.router.navigate(['/register'], { queryParams: { userName: name } });\n    }\n  }\n  lecturer(){\n    this.router.navigate(['/login'], { queryParams: { isLecturer: true } });\n  }\n}\n","<form [formGroup]=\"usersForm\">\n    <div class=\"form-group\">\n        <label for=\"usr\">Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"usr\" formControlName=\"name\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"pwd\">Password:</label>\n        <input type=\"password\" class=\"form-control\" id=\"pwd\" formControlName=\"password\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"course\">Course:</label>\n        <input type=\"text\"  *ngIf=\"!isLecturer\" class=\"form-control\" id=\"course\" formControlName=\"password\">\n    </div>\n</form>\n<button class=\"btn btn-success\" (click)=\"checkUser()\">Login</button>\n<button class=\"btn btn-success\" *ngIf=\"!isLecturer\" (click)=\"lecturer()\">Login Lecturer</button>\n\n<!-- <ul class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let u of users\">\n        <div class=\"row\">\n            <div class=\"col-2\">{{u.id}}</div>\n            <div class=\"col-2\">{{u.name}}</div>\n        </div>\n    </li>\n</ul> -->"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}