{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../users/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_li_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 9)(1, \"div\", 10)(2, \"div\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 11);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const u_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(u_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(u_r1.name);\n  }\n}\nexport class LoginComponent {\n  constructor(_userService, router) {\n    this._userService = _userService;\n    this.router = router;\n    this.users = [];\n    this.usersForm = new FormGroup({\n      name: new FormControl(''),\n      password: new FormControl('')\n    });\n  }\n  ngOnInit() {\n    this._userService.getUsers().subscribe(data => {\n      this.users = data;\n      console.log(\"users:\", this.users);\n    });\n  }\n  checkUser() {\n    const name = this.usersForm.value.name;\n    const password = this.usersForm.value.password;\n    // Check if the user exists in the array of all users\n    const user = this.users.find(user => user.name === name);\n    // Display alert based on whether the user exists or not\n    if (user) {\n      // If user exists, check if the password is correct\n      if (user.password === password) {} else {\n        Swal.fire('Error', \"Wrong password\", 'error');\n      }\n    } else {\n      // If user does not exist, navigate to the register component\n      this.router.navigate(['/register'], {\n        queryParams: {\n          userName: name\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 13,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"usr\"], [\"type\", \"text\", \"id\", \"usr\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"pwd\"], [\"type\", \"password\", \"id\", \"pwd\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"], [1, \"row\"], [1, \"col-2\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_9_listener() {\n          return ctx.checkUser();\n        });\n        i0.ɵɵtext(10, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"ul\", 7);\n        i0.ɵɵtemplate(12, LoginComponent_li_12_Template, 6, 2, \"li\", 8);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.usersForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","Swal","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","u_r1","id","name","LoginComponent","constructor","_userService","router","users","usersForm","password","ngOnInit","getUsers","subscribe","data","console","log","checkUser","value","user","find","fire","navigate","queryParams","userName","_","ɵɵdirectiveInject","i1","UserService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_button_click_9_listener","ɵɵtemplate","LoginComponent_li_12_Template","ɵɵproperty"],"sources":["E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\modules\\login\\login.component.ts","E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\modules\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User } from '../users/user.model';\nimport { UserService } from '../users/user.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  users: User[] = [];\n  usersForm: FormGroup;\n\n  constructor(private _userService: UserService, private router: Router) {\n    this.usersForm = new FormGroup({\n      name: new FormControl(''),\n      password: new FormControl('')\n    });\n  }\n\n  ngOnInit(): void {\n    this._userService.getUsers().subscribe(data => {\n      this.users = data;\n      console.log(\"users:\", this.users);\n    });\n  }\n\n  checkUser() {\n    const name = this.usersForm.value.name;\n    const password = this.usersForm.value.password;\n\n    // Check if the user exists in the array of all users\n    const user = this.users.find(user => user.name === name);\n\n    // Display alert based on whether the user exists or not\n    if (user) {\n      // If user exists, check if the password is correct\n      if (user.password === password) {\n        \n      }\n       else {\n        Swal.fire('Error',\"Wrong password\",'error');\n      }\n    } else {\n      // If user does not exist, navigate to the register component\n      this.router.navigate(['/register'],{queryParams:{userName:name}});\n    }\n  }\n\n}","<form [formGroup]=\"usersForm\">\n    <div class=\"form-group\">\n        <label for=\"usr\">Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"usr\" formControlName=\"name\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"pwd\">Password:</label>\n        <input type=\"password\" class=\"form-control\" id=\"pwd\" formControlName=\"password\">\n    </div>\n</form>\n<button class=\"btn btn-success\" (click)=\"checkUser()\">Login</button>\n<ul class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let u of users\">\n        <div class=\"row\">\n            <div class=\"col-2\">{{u.id}}</div>\n            <div class=\"col-2\">{{u.name}}</div>\n        </div>\n    </li>\n</ul>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}