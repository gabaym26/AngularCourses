{"ast":null,"code":"import { Student } from \"./student.model\";\nimport { Test } from \"./test.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet studentslist = [new Student(\"fghj\", 1, \"jk\", \"hjk 5\", \"13456\", \"d@s\", 89, undefined, true, [new Test(1, new Date(), \"jkk\", 90), new Test(2, new Date(), \"yy\", 90)], undefined), new Student(\"fgk\", 2, \"hjkjk\", \"gg\", \"1345678956\", \"h@else\", 67, undefined, true, undefined, undefined)];\nexport class studentService {\n  constructor(http) {\n    this.http = http;\n    this.students = studentslist;\n  }\n  getStudents() {\n    return this.students;\n  }\n  setStudents(student) {\n    let index = this.students ? this.students.findIndex(s => student?.id == s.id) : -1;\n    if (index > 0) {\n      this.students?.splice(index);\n    }\n    student && this.students ? this.students.push(student) : 0;\n  }\n  deleteStudent(student) {\n    let index = this.students ? this.students.findIndex(s => student?.id == s.id) : -1;\n    if (index > -1) {\n      this.students?.splice(index);\n    }\n  }\n  getStudentsAfterSeconds() {\n    return this.http.get(\"https://localhost:7009/swagger/index.html\");\n  }\n  static #_ = this.ɵfac = function studentService_Factory(t) {\n    return new (t || studentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: studentService,\n    factory: studentService.ɵfac\n  });\n}","map":{"version":3,"names":["Student","Test","studentslist","undefined","Date","studentService","constructor","http","students","getStudents","setStudents","student","index","findIndex","s","id","splice","push","deleteStudent","getStudentsAfterSeconds","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\studentService.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Student } from \"./student.model\";\r\nimport { Test } from \"./test.model\";\r\nimport { Observable } from \"rxjs/internal/Observable\";\r\nimport {HttpClient}from '@angular/common/http';\r\nlet studentslist =\r\n   [new Student(\"fghj\", 1, \"jk\", \"hjk 5\", \"13456\", \"d@s\", 89, undefined, true, [new Test(1, new Date(), \"jkk\", 90), new Test(2, new Date(), \"yy\", 90)], undefined), new Student(\"fgk\", 2, \"hjkjk\", \"gg\", \"1345678956\", \"h@else\", 67, undefined, true, undefined, undefined)];\r\n\r\n@Injectable()\r\nexport class studentService {\r\n   constructor(private http:HttpClient){\r\n\r\n   }\r\n   students: Student[] | undefined = studentslist;\r\n   getStudents(): Student[] | undefined {\r\n      return this.students;\r\n   }\r\n   setStudents(student: Student | undefined) {\r\n      let index = this.students ? this.students.findIndex(s => student?.id == s.id) : -1;\r\n      if (index > 0) {\r\n         this.students?.splice(index);\r\n      }\r\n      student && this.students ? this.students.push(student) : 0;\r\n   }\r\n   deleteStudent(student: Student | undefined) {\r\n      let index = this.students ? this.students.findIndex(s => student?.id == s.id) : -1;\r\n      if (index > -1) {\r\n         this.students?.splice(index);\r\n      }\r\n   }\r\n\r\n   getStudentsAfterSeconds(): Observable<Student[]>{\r\n     return this.http.get<Student[]>(\"https://localhost:7009/swagger/index.html\");\r\n   };\r\n\r\n   // getStudentsAfterSeconds(): Promise<Student[]> {\r\n   //    return new Promise((res, rej) => {\r\n   //       setTimeout(() => {\r\n   //          res(this.students ? this.students : []);\r\n   //       }, 3000)\r\n   //    });\r\n   // }\r\n}\r\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,IAAI,QAAQ,cAAc;;;AAGnC,IAAIC,YAAY,GACb,CAAC,IAAIF,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAEG,SAAS,EAAE,IAAI,EAAE,CAAC,IAAIF,IAAI,CAAC,CAAC,EAAE,IAAIG,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,IAAIH,IAAI,CAAC,CAAC,EAAE,IAAIG,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAED,SAAS,CAAC,EAAE,IAAIH,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,EAAE,EAAEG,SAAS,EAAE,IAAI,EAAEA,SAAS,EAAEA,SAAS,CAAC,CAAC;AAG5Q,OAAM,MAAOE,cAAc;EACxBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAGxB,KAAAC,QAAQ,GAA0BN,YAAY;EAD9C;EAEAO,WAAWA,CAAA;IACR,OAAO,IAAI,CAACD,QAAQ;EACvB;EACAE,WAAWA,CAACC,OAA4B;IACrC,IAAIC,KAAK,GAAG,IAAI,CAACJ,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACK,SAAS,CAACC,CAAC,IAAIH,OAAO,EAAEI,EAAE,IAAID,CAAC,CAACC,EAAE,CAAC,GAAG,CAAC,CAAC;IAClF,IAAIH,KAAK,GAAG,CAAC,EAAE;MACZ,IAAI,CAACJ,QAAQ,EAAEQ,MAAM,CAACJ,KAAK,CAAC;;IAE/BD,OAAO,IAAI,IAAI,CAACH,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACS,IAAI,CAACN,OAAO,CAAC,GAAG,CAAC;EAC7D;EACAO,aAAaA,CAACP,OAA4B;IACvC,IAAIC,KAAK,GAAG,IAAI,CAACJ,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACK,SAAS,CAACC,CAAC,IAAIH,OAAO,EAAEI,EAAE,IAAID,CAAC,CAACC,EAAE,CAAC,GAAG,CAAC,CAAC;IAClF,IAAIH,KAAK,GAAG,CAAC,CAAC,EAAE;MACb,IAAI,CAACJ,QAAQ,EAAEQ,MAAM,CAACJ,KAAK,CAAC;;EAElC;EAEAO,uBAAuBA,CAAA;IACrB,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAY,2CAA2C,CAAC;EAC9E;EAAC,QAAAC,CAAA,G;qBAxBShB,cAAc,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdrB,cAAc;IAAAsB,OAAA,EAAdtB,cAAc,CAAAuB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}