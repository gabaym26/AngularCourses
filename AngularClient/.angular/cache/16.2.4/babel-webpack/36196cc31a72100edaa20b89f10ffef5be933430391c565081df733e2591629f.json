{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AppComponent_app_test_history_list_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-test-history-list\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"student\", ctx_r0.student);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.x = 3;\n    this.title = \"hello! this is the beautifull title in the world.........!\";\n  }\n  // @Output()\n  // onShowTests: EventEmitter<Test[]> = new EventEmitter();\n  // selectedStudent(student: Student) {\n  //   if (student.tests)\n  //     this.onShowTests.emit(student.tests);\n  // }\n  showTests(s) {\n    this.student = s;\n    // this.onShowTests.emit(s.tests); \n  }\n\n  getWish() {\n    if (Date.now().toString() > \"2023/11/1\") return \"good morning!\";else return \"good evening!\";\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    inputs: {\n      student: \"student\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[3, \"onSelect\"], [3, \"student\", 4, \"ngIf\"], [3, \"student\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-student-list\", 0);\n        i0.ɵɵlistener(\"onSelect\", function AppComponent_Template_app_student_list_onSelect_0_listener($event) {\n          return ctx.showTests($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(1, AppComponent_app_test_history_list_1_Template, 1, 1, \"app-test-history-list\", 1);\n        i0.ɵɵelement(2, \"app-observable\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.student);\n      }\n    },\n    dependencies: [i1.NgIf],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","student","AppComponent","constructor","x","title","showTests","s","getWish","Date","now","toString","_","_2","selectors","inputs","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AppComponent_Template_app_student_list_onSelect_0_listener","$event","ɵɵelementEnd","ɵɵtemplate","AppComponent_app_test_history_list_1_Template","ɵɵadvance"],"sources":["C:\\Users\\IMOE001\\Documents\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\app.component.ts","C:\\Users\\IMOE001\\Documents\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\app.component.html"],"sourcesContent":["\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\n\r\n@Component({\r\n  template: `\r\n  <h1>{{title}}</h1>\r\n  <h2>you succeed!!!</h2>(\r\n  <br>\r\n  <p> {{getWish()}}</p>`,\r\n\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html'\r\n\r\n})\r\nexport class AppComponent {\r\n  @Input()\r\n  student?: Student;\r\n\r\n  // @Output()\r\n  // onShowTests: EventEmitter<Test[]> = new EventEmitter();\r\n\r\n  // selectedStudent(student: Student) {\r\n  //   if (student.tests)\r\n  //     this.onShowTests.emit(student.tests);\r\n  // }\r\n  showTests(s: Student) {\r\n    this.student = s;\r\n    // this.onShowTests.emit(s.tests); \r\n   }\r\n  x: number = 3;\r\n  title: string = \"hello! this is the beautifull title in the world.........!\";\r\n\r\n\r\n  getWish() {\r\n\r\n    if (Date.now().toString() > \"2023/11/1\")\r\n      return \"good morning!\";\r\n    else\r\n      return \"good evening!\";\r\n  }\r\n\r\n}","<app-student-list (onSelect)=\"showTests($event)\"></app-student-list>\r\n<app-test-history-list *ngIf=\"student\" [student]=\"student\"  ></app-test-history-list>\r\n<app-observable></app-observable>"],"mappings":";;;;ICCAA,EAAA,CAAAC,SAAA,+BAAqF;;;;IAA9CD,EAAA,CAAAE,UAAA,YAAAC,MAAA,CAAAC,OAAA,CAAmB;;;ADc1D,OAAM,MAAOC,YAAY;EAXzBC,YAAA;IA0BE,KAAAC,CAAC,GAAW,CAAC;IACb,KAAAC,KAAK,GAAW,4DAA4D;;EAZ5E;EACA;EAEA;EACA;EACA;EACA;EACAC,SAASA,CAACC,CAAU;IAClB,IAAI,CAACN,OAAO,GAAGM,CAAC;IAChB;EACD;;EAKDC,OAAOA,CAAA;IAEL,IAAIC,IAAI,CAACC,GAAG,EAAE,CAACC,QAAQ,EAAE,GAAG,WAAW,EACrC,OAAO,eAAe,CAAC,KAEvB,OAAO,eAAe;EAC1B;EAAC,QAAAC,CAAA,G;qBAzBUV,YAAY;EAAA;EAAA,QAAAW,EAAA,G;UAAZX,YAAY;IAAAY,SAAA;IAAAC,MAAA;MAAAd,OAAA;IAAA;IAAAe,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCfzBxB,EAAA,CAAA0B,cAAA,0BAAiD;QAA/B1B,EAAA,CAAA2B,UAAA,sBAAAC,2DAAAC,MAAA;UAAA,OAAYJ,GAAA,CAAAhB,SAAA,CAAAoB,MAAA,CAAiB;QAAA,EAAC;QAAC7B,EAAA,CAAA8B,YAAA,EAAmB;QACpE9B,EAAA,CAAA+B,UAAA,IAAAC,6CAAA,mCAAqF;QACrFhC,EAAA,CAAAC,SAAA,qBAAiC;;;QADTD,EAAA,CAAAiC,SAAA,GAAa;QAAbjC,EAAA,CAAAE,UAAA,SAAAuB,GAAA,CAAArB,OAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}