{"ast":null,"code":"import { from, interval, Observable } from 'rxjs';\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../studentService.service\";\nexport class ObservableComponent {\n  constructor(_studentService) {\n    this._studentService = _studentService;\n    this.students = [];\n    this.timerValue = \"\";\n    this.timer = new Observable(obs => {\n      setInterval(() => {\n        obs.next(new Date());\n      }, 1000);\n    });\n    this.timerByOperator = interval(1000).pipe(map(x => {\n      return new Date();\n    }));\n    this.studentsNames = new Observable(obs => {\n      for (var i = 0; i < (this.students ? this.students.length : 0); i++) {\n        obs.next(this.students ? this.students[i].name : \"\");\n      }\n    });\n    this.studentsNames2 = from(this.students ? this.students : []).pipe(map(x => {\n      return x.name;\n    }));\n    this.students = _studentService.getStudents();\n    this.studentsNames.subscribe(val => {\n      console.log(\"the name is: \" + val);\n    });\n    this.studentsNames2.subscribe(val => {\n      console.log(\"the name is: \" + val);\n    });\n  }\n  ngOnInit() {}\n  static #_ = this.ɵfac = function ObservableComponent_Factory(t) {\n    return new (t || ObservableComponent)(i0.ɵɵdirectiveInject(i1.studentService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ObservableComponent,\n    selectors: [[\"observable\"]],\n    decls: 1,\n    vars: 0,\n    template: function ObservableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\");\n      }\n    },\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["from","interval","Observable","map","ObservableComponent","constructor","_studentService","students","timerValue","timer","obs","setInterval","next","Date","timerByOperator","pipe","x","studentsNames","i","length","name","studentsNames2","getStudents","subscribe","val","console","log","ngOnInit","_","i0","ɵɵdirectiveInject","i1","studentService","_2","selectors","decls","vars","template","ObservableComponent_Template","rf","ctx","ɵɵelement"],"sources":["E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\ObservableComponent\\ObservableComponent.ts","E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\ObservableComponent\\ObservableComponent.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { from, interval, Observable } from 'rxjs';\r\nimport { filter, map } from \"rxjs/operators\";\r\nimport { studentService } from '../studentService.service';\r\nimport { Student } from '../student.model';\r\n\r\n@Component({\r\n  selector: 'observable',\r\n  templateUrl: './ObservableComponent.html'\r\n})\r\nexport class ObservableComponent implements OnInit {\r\nstudents?:Student[]=[];\r\n  constructor(private _studentService:studentService) {\r\n    this.students=_studentService.getStudents();\r\n   this.studentsNames.subscribe(\r\n      (val) => {\r\n        console.log(\"the name is: \" + val);\r\n      })\r\n      this.studentsNames2.subscribe(\r\n        (val) => {\r\n          console.log(\"the name is: \" + val);\r\n        }) \r\n         \r\n      }\r\n        \r\n  timerValue: string = \"\";\r\n\r\n  timer: Observable<Date> = new Observable(obs => {\r\n    setInterval(() => {\r\n      obs.next(new Date());\r\n    }, 1000);\r\n  });\r\n  timerByOperator: Observable<Date> = interval(1000).pipe(map(x=> {return new Date()}));\r\n\r\n  studentsNames: Observable<string> = new Observable(obs=>{\r\n    for(var i=0; i<(this.students?this.students.length:0); i++) {\r\n      obs.next(this.students?this.students[i].name:\"\");\r\n    }\r\n  });\r\n\r\n  studentsNames2: Observable<string> = from(this.students?this.students:[]).pipe(map(x=>{return x.name;}))\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div></div>"],"mappings":"AACA,SAASA,IAAI,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,MAAM;AACjD,SAAiBC,GAAG,QAAQ,gBAAgB;;;AAQ5C,OAAM,MAAOC,mBAAmB;EAE9BC,YAAoBC,eAA8B;IAA9B,KAAAA,eAAe,GAAfA,eAAe;IADrC,KAAAC,QAAQ,GAAY,EAAE;IAcpB,KAAAC,UAAU,GAAW,EAAE;IAEvB,KAAAC,KAAK,GAAqB,IAAIP,UAAU,CAACQ,GAAG,IAAG;MAC7CC,WAAW,CAAC,MAAK;QACfD,GAAG,CAACE,IAAI,CAAC,IAAIC,IAAI,EAAE,CAAC;MACtB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;IACF,KAAAC,eAAe,GAAqBb,QAAQ,CAAC,IAAI,CAAC,CAACc,IAAI,CAACZ,GAAG,CAACa,CAAC,IAAE;MAAE,OAAO,IAAIH,IAAI,EAAE;IAAA,CAAC,CAAC,CAAC;IAErF,KAAAI,aAAa,GAAuB,IAAIf,UAAU,CAACQ,GAAG,IAAE;MACtD,KAAI,IAAIQ,CAAC,GAAC,CAAC,EAAEA,CAAC,IAAE,IAAI,CAACX,QAAQ,GAAC,IAAI,CAACA,QAAQ,CAACY,MAAM,GAAC,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;QAC1DR,GAAG,CAACE,IAAI,CAAC,IAAI,CAACL,QAAQ,GAAC,IAAI,CAACA,QAAQ,CAACW,CAAC,CAAC,CAACE,IAAI,GAAC,EAAE,CAAC;;IAEpD,CAAC,CAAC;IAEF,KAAAC,cAAc,GAAuBrB,IAAI,CAAC,IAAI,CAACO,QAAQ,GAAC,IAAI,CAACA,QAAQ,GAAC,EAAE,CAAC,CAACQ,IAAI,CAACZ,GAAG,CAACa,CAAC,IAAE;MAAC,OAAOA,CAAC,CAACI,IAAI;IAAC,CAAC,CAAC,CAAC;IA3BtG,IAAI,CAACb,QAAQ,GAACD,eAAe,CAACgB,WAAW,EAAE;IAC5C,IAAI,CAACL,aAAa,CAACM,SAAS,CACxBC,GAAG,IAAI;MACNC,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGF,GAAG,CAAC;IACpC,CAAC,CAAC;IACF,IAAI,CAACH,cAAc,CAACE,SAAS,CAC1BC,GAAG,IAAI;MACNC,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGF,GAAG,CAAC;IACpC,CAAC,CAAC;EAEJ;EAkBJG,QAAQA,CAAA,GACR;EAAC,QAAAC,CAAA,G;qBAhCUxB,mBAAmB,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnB7B,mBAAmB;IAAA8B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVhCV,EAAA,CAAAY,SAAA,UAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}