{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nexport let CourseDetailsComponent = class CourseDetailsComponent {\n  constructor(router) {\n    this.router = router;\n    this.learningWays = [\"Frontal\", \"Zoom\"];\n  }\n  ngOnInit() {\n    // Assuming course data is fetched or assigned somewhere\n    this.checkStartDate();\n    const storedData = sessionStorage.getItem('userData');\n    if (storedData) {\n      this.currentUser = JSON.parse(storedData);\n      console.log(\"current user:\", this.currentUser);\n    }\n    const storedIsLecturer = sessionStorage.getItem('isLecturer');\n    if (storedIsLecturer) {\n      this.isLecturer = JSON.parse(storedIsLecturer);\n    }\n  }\n  checkStartDate() {\n    if (this.course?.startDate) {\n      const start = new Date(this.course.startDate);\n      const today = new Date();\n      const nextWeek = new Date();\n      nextWeek.setDate(today.getDate() + 7); // Get date for the start of the next week\n      // Check if startDate is in the next week\n      this.isStartDateInNextWeek = start <= nextWeek && start >= today;\n      console.log(\"start\", this.isStartDateInNextWeek);\n    }\n  }\n  ifEditCourse() {\n    // this.router.navigate(['/editCourses'], { queryParams: { course: this.course } });\n    this.editCourse = true;\n  }\n};\n__decorate([Input()], CourseDetailsComponent.prototype, \"course\", void 0);\nCourseDetailsComponent = __decorate([Component({\n  selector: 'app-course-details',\n  templateUrl: './course-details.component.html',\n  styleUrls: ['./course-details.component.scss']\n})], CourseDetailsComponent);","map":{"version":3,"names":["Component","Input","CourseDetailsComponent","constructor","router","learningWays","ngOnInit","checkStartDate","storedData","sessionStorage","getItem","currentUser","JSON","parse","console","log","storedIsLecturer","isLecturer","course","startDate","start","Date","today","nextWeek","setDate","getDate","isStartDateInNextWeek","ifEditCourse","editCourse","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\modules\\Courses\\course-details\\course-details.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Course } from '../course.model';\nimport { User } from '../../users/user.model';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-course-details',\n  templateUrl: './course-details.component.html',\n  styleUrls: ['./course-details.component.scss']\n})\nexport class CourseDetailsComponent implements OnInit {\n  @Input()\n  course?: Course;\n  editCourse?:boolean;\n  currentUser?: User;\n  isStartDateInNextWeek?: boolean;\n  isLecturer?:boolean;\n  learningWays:string[]=[\"Frontal\",\"Zoom\"];\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    // Assuming course data is fetched or assigned somewhere\n    this.checkStartDate();\n    const storedData = sessionStorage.getItem('userData');\n    if (storedData) {\n      this.currentUser = JSON.parse(storedData);\n      console.log(\"current user:\", this.currentUser)\n    }\n    const storedIsLecturer = sessionStorage.getItem('isLecturer');\n    if (storedIsLecturer) {\n      this.isLecturer = JSON.parse(storedIsLecturer);\n    }\n  }\n\n  checkStartDate(): void {\n\n    if (this.course?.startDate) {\n      const start = new Date(this.course.startDate);\n      const today = new Date();\n      const nextWeek = new Date();\n      nextWeek.setDate(today.getDate() + 7); // Get date for the start of the next week\n      // Check if startDate is in the next week\n      this.isStartDateInNextWeek = start <= nextWeek && start >= today;\n      console.log(\"start\", this.isStartDateInNextWeek)\n    }\n  }\n  ifEditCourse(){\n    // this.router.navigate(['/editCourses'], { queryParams: { course: this.course } });\n     this.editCourse=true;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAgB,eAAe;AASjD,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAQjCC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAD1B,KAAAC,YAAY,GAAU,CAAC,SAAS,EAAC,MAAM,CAAC;EACF;EAEtCC,QAAQA,CAAA;IACN;IACA,IAAI,CAACC,cAAc,EAAE;IACrB,MAAMC,UAAU,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IACrD,IAAIF,UAAU,EAAE;MACd,IAAI,CAACG,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;MACzCM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACJ,WAAW,CAAC;;IAEhD,MAAMK,gBAAgB,GAAGP,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC;IAC7D,IAAIM,gBAAgB,EAAE;MACpB,IAAI,CAACC,UAAU,GAAGL,IAAI,CAACC,KAAK,CAACG,gBAAgB,CAAC;;EAElD;EAEAT,cAAcA,CAAA;IAEZ,IAAI,IAAI,CAACW,MAAM,EAAEC,SAAS,EAAE;MAC1B,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,IAAI,CAACH,MAAM,CAACC,SAAS,CAAC;MAC7C,MAAMG,KAAK,GAAG,IAAID,IAAI,EAAE;MACxB,MAAME,QAAQ,GAAG,IAAIF,IAAI,EAAE;MAC3BE,QAAQ,CAACC,OAAO,CAACF,KAAK,CAACG,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;MACvC;MACA,IAAI,CAACC,qBAAqB,GAAGN,KAAK,IAAIG,QAAQ,IAAIH,KAAK,IAAIE,KAAK;MAChER,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACW,qBAAqB,CAAC;;EAEpD;EACAC,YAAYA,CAAA;IACV;IACC,IAAI,CAACC,UAAU,GAAC,IAAI;EACvB;CACD;AAtCCC,UAAA,EADC5B,KAAK,EAAE,C,qDACQ;AAFLC,sBAAsB,GAAA2B,UAAA,EALlC7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACW9B,sBAAsB,CAwClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}