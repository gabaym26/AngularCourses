{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { LearningWay } from '../course.model';\nexport let CourseDetailsComponent = class CourseDetailsComponent {\n  constructor(_categoryService) {\n    this._categoryService = _categoryService;\n    this.learningWays = Object.values(LearningWay);\n    this.categories = [];\n  }\n  ngOnInit() {\n    this.checkStartDate();\n    const storedData = sessionStorage.getItem('userData');\n    if (storedData) {\n      this.currentUser = JSON.parse(storedData);\n    }\n    const storedIsLecturer = sessionStorage.getItem('isLecturer');\n    if (storedIsLecturer) {\n      this.isLecturer = JSON.parse(storedIsLecturer);\n    }\n    this._categoryService.getCategoriesFromServer().subscribe(data => {\n      this.categories = data;\n    });\n  }\n  checkStartDate() {\n    if (this.course?.startDate) {\n      const start = new Date(this.course.startDate);\n      const today = new Date();\n      const nextWeek = new Date();\n      nextWeek.setDate(today.getDate() + 7); // Get date for the start of the next week\n      // Check if startDate is in the next week\n      this.isStartDateInNextWeek = start <= nextWeek && start >= today;\n      console.log(\"start\", this.isStartDateInNextWeek);\n    }\n  }\n  ifEditCourse() {\n    // this.router.navigate(['/editCourses'], { queryParams: { course: this.course } });\n    this.editCourse = true;\n  }\n  IconRouting(id) {\n    return this.categories.filter(x => x.id == id)[0];\n  }\n};\n__decorate([Input()], CourseDetailsComponent.prototype, \"course\", void 0);\nCourseDetailsComponent = __decorate([Component({\n  selector: 'app-course-details',\n  templateUrl: './course-details.component.html',\n  styleUrls: ['./course-details.component.scss']\n})], CourseDetailsComponent);","map":{"version":3,"names":["Component","Input","LearningWay","CourseDetailsComponent","constructor","_categoryService","learningWays","Object","values","categories","ngOnInit","checkStartDate","storedData","sessionStorage","getItem","currentUser","JSON","parse","storedIsLecturer","isLecturer","getCategoriesFromServer","subscribe","data","course","startDate","start","Date","today","nextWeek","setDate","getDate","isStartDateInNextWeek","console","log","ifEditCourse","editCourse","IconRouting","id","filter","x","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\modules\\Courses\\course-details\\course-details.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Course, LearningWay } from '../course.model';\nimport { User } from '../../users/user.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Category } from '../../categories/category.model';\n@Component({\n  selector: 'app-course-details',\n  templateUrl: './course-details.component.html',\n  styleUrls: ['./course-details.component.scss']\n})\nexport class CourseDetailsComponent implements OnInit {\n  @Input()\n  course?: Course;\n  editCourse?: boolean;\n  currentUser?: User;\n  isStartDateInNextWeek?: boolean;\n  isLecturer?: boolean;\n  learningWays = Object.values(LearningWay);\n  categories: Category[] = []\n  private _categoryService: any;\n\n  constructor(private _categoryService,) { }\n\n  ngOnInit(): void {\n    this.checkStartDate();\n    const storedData = sessionStorage.getItem('userData');\n    if (storedData) {\n      this.currentUser = JSON.parse(storedData);\n    }\n    const storedIsLecturer = sessionStorage.getItem('isLecturer');\n    if (storedIsLecturer) {\n      this.isLecturer = JSON.parse(storedIsLecturer);\n    }\n    this._categoryService.getCategoriesFromServer().subscribe(data => {\n      this.categories = data;\n    })\n\n  }\n\n\n\n\n  checkStartDate(): void {\n\n    if (this.course?.startDate) {\n      const start = new Date(this.course.startDate);\n      const today = new Date();\n      const nextWeek = new Date();\n      nextWeek.setDate(today.getDate() + 7); // Get date for the start of the next week\n      // Check if startDate is in the next week\n      this.isStartDateInNextWeek = start <= nextWeek && start >= today;\n      console.log(\"start\", this.isStartDateInNextWeek)\n    }\n  }\n  ifEditCourse() {\n    // this.router.navigate(['/editCourses'], { queryParams: { course: this.course } });\n    this.editCourse = true;\n  }\n  IconRouting(id: number) {\n    return this.categories.filter(x => x.id == id)[0];\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAgB,eAAe;AACxD,SAAiBC,WAAW,QAAQ,iBAAiB;AAS9C,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAWjCC,YAAoBC,gBAAgB;IAAhB,KAAAA,gBAAgB,GAAhBA,gBAAgB;IAJpC,KAAAC,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACN,WAAW,CAAC;IACzC,KAAAO,UAAU,GAAe,EAAE;EAGc;EAEzCC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;IACrB,MAAMC,UAAU,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IACrD,IAAIF,UAAU,EAAE;MACd,IAAI,CAACG,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;;IAE3C,MAAMM,gBAAgB,GAAGL,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC;IAC7D,IAAII,gBAAgB,EAAE;MACpB,IAAI,CAACC,UAAU,GAAGH,IAAI,CAACC,KAAK,CAACC,gBAAgB,CAAC;;IAEhD,IAAI,CAACb,gBAAgB,CAACe,uBAAuB,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC/D,IAAI,CAACb,UAAU,GAAGa,IAAI;IACxB,CAAC,CAAC;EAEJ;EAKAX,cAAcA,CAAA;IAEZ,IAAI,IAAI,CAACY,MAAM,EAAEC,SAAS,EAAE;MAC1B,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,IAAI,CAACH,MAAM,CAACC,SAAS,CAAC;MAC7C,MAAMG,KAAK,GAAG,IAAID,IAAI,EAAE;MACxB,MAAME,QAAQ,GAAG,IAAIF,IAAI,EAAE;MAC3BE,QAAQ,CAACC,OAAO,CAACF,KAAK,CAACG,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;MACvC;MACA,IAAI,CAACC,qBAAqB,GAAGN,KAAK,IAAIG,QAAQ,IAAIH,KAAK,IAAIE,KAAK;MAChEK,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACF,qBAAqB,CAAC;;EAEpD;EACAG,YAAYA,CAAA;IACV;IACA,IAAI,CAACC,UAAU,GAAG,IAAI;EACxB;EACAC,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAAC5B,UAAU,CAAC6B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACF,EAAE,IAAIA,EAAE,CAAC,CAAC,CAAC,CAAC;EACnD;CAED;AAlDCG,UAAA,EADCvC,KAAK,EAAE,C,qDACQ;AAFLE,sBAAsB,GAAAqC,UAAA,EALlCxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWxC,sBAAsB,CAoDlC"},"metadata":{},"sourceType":"module","externalDependencies":[]}