{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nexport let AppComponent = class AppComponent {\n  ngOnInit() {\n    const storedData = sessionStorage.getItem('userData');\n    if (storedData) {\n      this.currentUser = JSON.parse(storedData);\n    }\n    const storedIsLecturer = sessionStorage.getItem('isLecturer');\n    if (storedIsLecturer) {\n      this.isLecturer = JSON.parse(storedIsLecturer);\n    }\n  }\n  constructor(router) {\n    this.router = router;\n  }\n  getWish() {\n    if (Date.now().toString() > \"2023/11/1\") return \"good morning!\";else return \"good evening!\";\n  }\n  existsUser() {\n    if (!(this.isLecturer && this.currentUser)) ;\n  }\n};\nAppComponent = __decorate([Component({\n  template: `\n  <h1>{{title}}</h1>\n  <h2>you succeed!!!</h2>(\n  <br>\n  <p> {{getWish()}}</p>`,\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})], AppComponent);","map":{"version":3,"names":["Component","AppComponent","ngOnInit","storedData","sessionStorage","getItem","currentUser","JSON","parse","storedIsLecturer","isLecturer","constructor","router","getWish","Date","now","toString","existsUser","__decorate","template","selector","templateUrl"],"sources":["E:\\מיכל גבאי\\תכנות\\אנגולר\\AngularCourses\\firstProject\\src\\app\\app.component.ts"],"sourcesContent":["\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { User } from \"./modules/users/user.model\";\r\n\r\n@Component({\r\n  template: `\r\n  <h1>{{title}}</h1>\r\n  <h2>you succeed!!!</h2>(\r\n  <br>\r\n  <p> {{getWish()}}</p>`,\r\n\r\n  selector: 'app-root',\r\n  templateUrl: 'app.component.html'\r\n\r\n})\r\nexport class AppComponent implements OnInit {\r\n  currentUser?: User;\r\n  isLecturer?: boolean;\r\n  ngOnInit(): void {\r\n    const storedData = sessionStorage.getItem('userData');\r\n    if (storedData) {\r\n      this.currentUser = JSON.parse(storedData);\r\n    }\r\n    const storedIsLecturer = sessionStorage.getItem('isLecturer');\r\n    if (storedIsLecturer) {\r\n      this.isLecturer = JSON.parse(storedIsLecturer);\r\n    }\r\n  }\r\n\r\nconstructor(private router: Router){}\r\n\r\n  getWish() {\r\n\r\n    if (Date.now().toString() > \"2023/11/1\")\r\n      return \"good morning!\";\r\n    else\r\n      return \"good evening!\";\r\n  }\r\n  existsUser() {\r\nif(!(this.isLecturer&&this.currentUser))\r\n\r\n  }\r\n}"],"mappings":";AAEA,SAASA,SAAS,QAA6C,eAAe;AAcvE,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAGvBC,QAAQA,CAAA;IACN,MAAMC,UAAU,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IACrD,IAAIF,UAAU,EAAE;MACd,IAAI,CAACG,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;;IAE3C,MAAMM,gBAAgB,GAAGL,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC;IAC7D,IAAII,gBAAgB,EAAE;MACpB,IAAI,CAACC,UAAU,GAAGH,IAAI,CAACC,KAAK,CAACC,gBAAgB,CAAC;;EAElD;EAEFE,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAU;EAElCC,OAAOA,CAAA;IAEL,IAAIC,IAAI,CAACC,GAAG,EAAE,CAACC,QAAQ,EAAE,GAAG,WAAW,EACrC,OAAO,eAAe,CAAC,KAEvB,OAAO,eAAe;EAC1B;EACAC,UAAUA,CAAA;IACZ,IAAG,EAAE,IAAI,CAACP,UAAU,IAAE,IAAI,CAACJ,WAAW,CAAC,EAErC;EAAA;CACD;AA3BYL,YAAY,GAAAiB,UAAA,EAXxBlB,SAAS,CAAC;EACTmB,QAAQ,EAAE;;;;wBAIY;EAEtBC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;CAEd,CAAC,C,EACWpB,YAAY,CA2BxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}