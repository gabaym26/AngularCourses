{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nexport let AddCourseComponent = class AddCourseComponent {\n  constructor(route, _courseService, _categoryService, _router) {\n    this.route = route;\n    this._courseService = _courseService;\n    this._categoryService = _categoryService;\n    this._router = _router;\n    this.remove = false;\n    this.courseChanged = new EventEmitter();\n    this.name = this.course?.name;\n    this.startDate = this.course?.startDate;\n    this.image = this.course?.image;\n    this.learningWay = this.course?.learningWay;\n    this.categoryId = this.course?.categoryId;\n    this.inputs = [\" \"]; // מערך שמכיל את תיבות הקלט, מתחיל עם תיבה ריקה בהתחלה\n    this.l = this.inputs.length;\n    this.courseForm = new FormGroup({\n      name: new FormControl(this.name, [Validators.required, Validators.minLength(2)]),\n      startDate: new FormControl('', [Validators.required]),\n      image: new FormControl('', [Validators.required]),\n      learningWay: new FormControl('', [Validators.required]),\n      categoryId: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    console.log(\"course\", this.name);\n    this._categoryService.getCategoriesFromServer().subscribe(data => {\n      this.categories = data;\n    });\n    this.remove = false;\n  }\n  onInput(event, index) {\n    const target = event.target;\n    const value = target.value.trim();\n    if (value && index === this.inputs.length - 1) {\n      this.inputs.push(value);\n    } else if (!value && index < this.inputs.length - 1) {\n      this.inputs.splice(index + 1, 1);\n    }\n    console.log(this.inputs);\n  }\n  saveNewCourse() {\n    const courseToAdd = {\n      name: this.courseForm.value.name,\n      startDate: this.courseForm.value.startDate,\n      image: this.courseForm.value.image,\n      categoryId: this.courseForm.value.categoryId,\n      lessonsAmount: this.inputs.length - 1,\n      courseSyllabus: this.inputs.splice(1, this.inputs.length),\n      lecturerId: +JSON.parse(sessionStorage.getItem('userData'))?.id,\n      learningWay: +this.courseForm.value.learningWay\n    };\n    if (!this.isEdit) {\n      console.log(courseToAdd);\n      this._courseService.addCourse(courseToAdd).subscribe(s => {\n        console.log(\"s\", s);\n        if (s == true) {\n          Swal.fire(\"Success\", \"The course was saved successfully!!!\", \"success\");\n          this._router.navigate(['/allCourses']);\n        } else Swal.fire('Error', 'Cannot add', 'error');\n      });\n    } else {\n      this._courseService.editCourse(this.course?.id, courseToAdd).subscribe(s => {\n        if (s == true) {\n          Swal.fire(\"Success\", \"The course was updated successfully!!!\", \"success\");\n          this.courseChanged.emit(null);\n          this._router.navigate(['/allCourses']);\n        } else Swal.fire('Error', 'Cannot Update', 'error');\n      });\n    }\n  }\n  removes() {\n    this.remove = true;\n  }\n};\n__decorate([Input()], AddCourseComponent.prototype, \"course\", void 0);\n__decorate([Input()], AddCourseComponent.prototype, \"isEdit\", void 0);\n__decorate([Output()], AddCourseComponent.prototype, \"courseChanged\", void 0);\nAddCourseComponent = __decorate([Component({\n  selector: 'app-add-course',\n  templateUrl: './add-course.component.html',\n  styleUrls: ['./add-course.component.scss']\n})], AddCourseComponent);","map":{"version":3,"names":["Component","EventEmitter","Input","Output","FormControl","FormGroup","Validators","Swal","AddCourseComponent","constructor","route","_courseService","_categoryService","_router","remove","courseChanged","name","course","startDate","image","learningWay","categoryId","inputs","l","length","courseForm","required","minLength","ngOnInit","console","log","getCategoriesFromServer","subscribe","data","categories","onInput","event","index","target","value","trim","push","splice","saveNewCourse","courseToAdd","lessonsAmount","courseSyllabus","lecturerId","JSON","parse","sessionStorage","getItem","id","isEdit","addCourse","s","fire","navigate","editCourse","emit","removes","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\modules\\Courses\\add-course\\add-course.component.ts"],"sourcesContent":["import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Course, LearningWay } from '../course.model';\nimport { Category } from '../../categories/category.model';\nimport { CourseService } from '../course.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { CategoryService } from '../../categories/category.service';\n@Component({\n  selector: 'app-add-course',\n  templateUrl: './add-course.component.html',\n  styleUrls: ['./add-course.component.scss']\n})\nexport class AddCourseComponent implements OnInit {\n  @Input()\n  course?: Course;\n\n  @Input()\n  isEdit?: boolean;\n  remove:boolean=false;\n  @Output()\n  courseChanged : EventEmitter<any>=new EventEmitter<any>();\n  name?: string = this.course?.name;\n  startDate?: Date = this.course?.startDate;\n  image?: string = this.course?.image;\n  learningWay?: number = this.course?.learningWay;\n  categoryId?: number = this.course?.categoryId;\n  inputs: string[] = [\" \"]; // מערך שמכיל את תיבות הקלט, מתחיל עם תיבה ריקה בהתחלה\n  l: number = this.inputs.length;\n  categories?: Category[];\n  courseForm: FormGroup;\n  constructor(private route: ActivatedRoute, private _courseService: CourseService, private _categoryService: CategoryService, private _router: Router) {\n    this.courseForm = new FormGroup({\n      name: new FormControl(this.name, [Validators.required, Validators.minLength(2)]),\n      startDate: new FormControl('', [Validators.required]),\n      image: new FormControl('', [Validators.required]),\n      learningWay: new FormControl('', [Validators.required]),\n      categoryId: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit(): void {\n    console.log(\"course\", this.name)\n    this._categoryService.getCategoriesFromServer().subscribe(data => {\n      this.categories = data;\n    })\n    this.remove=false;\n\n  }\n\n \n  onInput(event: Event, index: number): void {\n\n    const target = event.target as HTMLInputElement;\n    const value = target.value.trim();\n\n    if (value && index === this.inputs.length - 1) {\n      this.inputs.push(value);\n    }\n    else if (!value && index < this.inputs.length - 1) {\n      this.inputs.splice(index + 1, 1);\n    }\n    console.log(this.inputs)\n  }\n  saveNewCourse() {\n    const courseToAdd = {\n      name: this.courseForm.value.name,\n      startDate: this.courseForm.value.startDate,\n      image: this.courseForm.value.image,\n      categoryId: this.courseForm.value.categoryId,\n      lessonsAmount: this.inputs.length - 1,\n      courseSyllabus: this.inputs.splice(1,this.inputs.length),\n      lecturerId:+JSON.parse(sessionStorage.getItem('userData')!)?.id,\n      learningWay: +this.courseForm.value.learningWay\n    };\n    if (!this.isEdit) {\n      console.log(courseToAdd)\n      this._courseService.addCourse(courseToAdd).subscribe(s => {\n        console.log(\"s\", s);\n        if (s == true) {\n          Swal.fire(\"Success\", \"The course was saved successfully!!!\", \"success\");\n          this._router.navigate(['/allCourses']);\n        }\n        else\n          Swal.fire('Error', 'Cannot add', 'error');\n      })\n    }\n    else {\n      this._courseService.editCourse(this.course?.id!, courseToAdd).subscribe(s => {\n        if (s == true) {\n          Swal.fire(\"Success\", \"The course was updated successfully!!!\", \"success\");\n          this.courseChanged.emit(null);\n\n          this._router.navigate(['/allCourses']);\n        }\n        else\n          Swal.fire('Error', 'Cannot Update', 'error');\n\n      })\n    }\n\n  }\n  removes(){\n    this.remove=true;\n  }\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}