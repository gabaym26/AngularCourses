{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../users/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor(_userService, router) {\n    this._userService = _userService;\n    this.router = router;\n    this.users = [];\n    this.usersForm = new FormGroup({\n      name: new FormControl(''),\n      password: new FormControl(''),\n      address: new FormControl(''),\n      email: new FormControl('')\n    });\n  }\n  ngOnInit() {\n    console.log(this.userName);\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    inputs: {\n      userName: \"userName\"\n    },\n    decls: 19,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"usr\"], [\"type\", \"text\", \"id\", \"usr\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"value\"], [\"for\", \"pwd\"], [\"type\", \"password\", \"id\", \"pwd\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"address\"], [\"type\", \"text\", \"id\", \"address\", \"formControlName\", \"address\", 1, \"form-control\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [1, \"btn\", \"btn-success\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Address:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 8);\n        i0.ɵɵtext(15, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"button\", 10);\n        i0.ɵɵtext(18, \"Register\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.usersForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", ctx.userName);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","RegisterComponent","constructor","_userService","router","users","usersForm","name","password","address","email","ngOnInit","console","log","userName","_","i0","ɵɵdirectiveInject","i1","UserService","i2","Router","_2","selectors","inputs","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance"],"sources":["E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\modules\\register\\register.component.ts","E:\\מיכל גבאי\\תכנות\\אנגולר\\firstProject\\src\\app\\modules\\register\\register.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { User } from '../users/user.model';\nimport { Router } from '@angular/router';\nimport { UserService } from '../users/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  users: User[] = [];\n  usersForm: FormGroup;\n\n  @Input()\n  userName?:string;\n\n  constructor(private _userService: UserService, private router: Router) {\n    this.usersForm = new FormGroup({\n      name: new FormControl(''),\n      password: new FormControl(''),\n      address:new FormControl(''),\n      email:new FormControl('')\n    });\n  }\n\n  ngOnInit(): void {\n    console.log(this.userName)\n  }\n}\n","<form [formGroup]=\"usersForm\">\n    <div class=\"form-group\">\n        <label for=\"usr\">Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"usr\" [value]=\"userName\" formControlName=\"name\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"pwd\">Password:</label>\n        <input type=\"password\" class=\"form-control\" id=\"pwd\" formControlName=\"password\">\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"address\">Address:</label>\n        <input type=\"text\" class=\"form-control\" id=\"address\" formControlName=\"address\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\">\n    </div>\n   \n</form>\n<button class=\"btn btn-success\" >Register</button>\n<!-- <ul class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let u of users\">\n        <div class=\"row\">\n            <div class=\"col-2\">{{u.id}}</div>\n            <div class=\"col-2\">{{u.name}}</div>\n        </div>\n    </li>\n</ul> -->\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;;AAUvD,OAAM,MAAOC,iBAAiB;EAO5BC,YAAoBC,YAAyB,EAAUC,MAAc;IAAjD,KAAAD,YAAY,GAAZA,YAAY;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAN7D,KAAAC,KAAK,GAAW,EAAE;IAOhB,IAAI,CAACC,SAAS,GAAG,IAAIN,SAAS,CAAC;MAC7BO,IAAI,EAAE,IAAIR,WAAW,CAAC,EAAE,CAAC;MACzBS,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,CAAC;MAC7BU,OAAO,EAAC,IAAIV,WAAW,CAAC,EAAE,CAAC;MAC3BW,KAAK,EAAC,IAAIX,WAAW,CAAC,EAAE;KACzB,CAAC;EACJ;EAEAY,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC;EAC5B;EAAC,QAAAC,CAAA,G;qBAlBUd,iBAAiB,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBrB,iBAAiB;IAAAsB,SAAA;IAAAC,MAAA;MAAAV,QAAA;IAAA;IAAAW,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX9Bd,EAAA,CAAAgB,cAAA,cAA8B;QAELhB,EAAA,CAAAiB,MAAA,YAAK;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAC9BlB,EAAA,CAAAmB,SAAA,eAA2F;QAC/FnB,EAAA,CAAAkB,YAAA,EAAM;QAENlB,EAAA,CAAAgB,cAAA,aAAwB;QACHhB,EAAA,CAAAiB,MAAA,gBAAS;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAClClB,EAAA,CAAAmB,SAAA,eAAgF;QACpFnB,EAAA,CAAAkB,YAAA,EAAM;QAENlB,EAAA,CAAAgB,cAAA,aAAwB;QACChB,EAAA,CAAAiB,MAAA,gBAAQ;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QACrClB,EAAA,CAAAmB,SAAA,gBAA+E;QACnFnB,EAAA,CAAAkB,YAAA,EAAM;QACNlB,EAAA,CAAAgB,cAAA,cAAwB;QACDhB,EAAA,CAAAiB,MAAA,cAAM;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QACjClB,EAAA,CAAAmB,SAAA,gBAA4E;QAChFnB,EAAA,CAAAkB,YAAA,EAAM;QAGVlB,EAAA,CAAAgB,cAAA,kBAAiC;QAAAhB,EAAA,CAAAiB,MAAA,gBAAQ;QAAAjB,EAAA,CAAAkB,YAAA,EAAS;;;QArB5ClB,EAAA,CAAAoB,UAAA,cAAAL,GAAA,CAAAzB,SAAA,CAAuB;QAG4BU,EAAA,CAAAqB,SAAA,GAAkB;QAAlBrB,EAAA,CAAAoB,UAAA,UAAAL,GAAA,CAAAjB,QAAA,CAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}